00 00 40 20  // [00400000] add $8, $0, $0                  ; 4: add $t0, $zero, $zero      # 7: $t0 = 0
00 00 48 20  // [00400004] add $9, $0, $0                  ; 7: add $t1, $zero, $zero      # 8: $t1 = 0
01 09 48 2a  // [00400008] slt $9, $8, $9                  ; 10: slt $t1, $t0, $t1          # 9: $t1 = 0 (because $t0 == $t1)
00 00 50 20  // [0040000c] add $10, $0, $0                 ; 13: add $t2, $zero, $zero      # 10: $t2 = 0
01 49 50 24  // [00400010] and $10, $10, $9                ; 16: and $t2, $t2, $t1          # 11: $t2 = 0 & 0 = 0
00 00 58 20  // [00400014] add $11, $0, $0                 ; 19: add $t3, $zero, $zero      # 12: $t3 = 0
af 8b 00 00  // [00400018] sw $11, 0($28)                  ; 22: sw $t3, 0($gp)             # Store 0 at MEM[$gp]
00 00 00 00  // [0040001c] nop                             ; 25: nop                         # No operation (you can replace this with actual instructions)
8f 8b 00 00  // [00400020] lw $11, 0($28)                  ; 28: lw $t3, 0($gp)             # 13: $t3 = MEM[$gp] = 0
11 60 00 0d  // [00400024] beq $11, $0, 52 [end_loop-0x00400024]; 31: beq $t3, $zero, end_loop   # 14: if $t3 == 0, jump to end_loop
00 00 60 20  // [00400028] add $12, $0, $0                 ; 36: add $t4, $zero, $zero      # 15: $t4 = 0
01 4c 68 25  // [0040002c] or $13, $10, $12                ; 39: or $t5, $t2, $t4           # 16: $t5 = 0 | 0 = 0
8f 9c 00 00  // [00400030] lw $28, 0($28)                  ; 42: lw $gp, 0($gp)             # 17: $gp = MEM[$gp]
01 4d 70 2a  // [00400034] slt $14, $10, $13               ; 45: slt $t6, $t2, $t5          # 18: $t6 = ($t2 < $t5)
00 00 78 20  // [00400038] add $15, $0, $0                 ; 48: add $t7, $zero, $zero      # 19: $t7 = 0
01 8f 48 24  // [0040003c] and $9, $12, $15                ; 51: and $t1, $t4, $t7          # 20: $t1 = 0 & 0 = 0
01 09 40 25  // [00400040] or $8, $8, $9                   ; 54: or $t0, $t0, $t1           # 21: $t0 = 0 | 0 = 0
01 4c 68 2a  // [00400044] slt $13, $10, $12               ; 57: slt $t5, $t2, $t4          # 22: $t5 = 0
01 2a 48 25  // [00400048] or $9, $9, $10                  ; 60: or $t1, $t1, $t2           # 26: $t1 = 0 | 0 = 0
01 09 40 22  // [0040004c] sub $8, $8, $9                  ; 63: sub $t0, $t0, $t1          # 27: $t0 = 0 - 0 = 0
8f 9c 00 00  // [00400050] lw $28, 0($28)                  ; 66: lw $gp, 0($gp)             # 28: $gp = MEM[$gp]
01 ca 70 26  // [00400054] xor $14, $14, $10               ; 69: xor $t6, $t6, $t2          # 29: $t6 = $t6 ^ 0
01 08 40 22  // [00400058] sub $8, $8, $8                  ; 72: sub $t0, $t0, $t0          # 30: $t0 = 0 - 0 = 0
00 00 78 20  // [0040005c] add $15, $0, $0                 ; 76: add $t7, $zero, $zero      # 23: $t7 = 0
01 ec 50 24  // [00400060] and $10, $15, $12               ; 79: and $t2, $t7, $t4          # 24: $t2 = 0 & 0 = 0
